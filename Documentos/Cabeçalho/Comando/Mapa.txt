<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Guia de Mapas IA — Futurista 3D (MapLibre)</title>

  <!-- MapLibre GL JS -->
  <link href="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.css" rel="stylesheet" />
  <script src="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.js"></script>

  <!-- UI básica -->
  <style>
    :root{
      --bg:#070d1c; --panel:#0a142b; --card:#0f1f3f; --text:#d7e4ff; --muted:#8aa0c8; --neon:#00ffc6; --neon2:#63c6ff;
    }
    html,body,#app{height:100%;margin:0;background:var(--bg);color:var(--text);font-family:Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial}
    #map{position:absolute;inset:0}
    .topbar{position:absolute;z-index:5;left:16px;top:16px;display:flex;gap:8px;align-items:center}
    .search{display:flex;gap:8px;align-items:center;background:rgba(7,14,32,.6);border:1px solid #1b2e5d;padding:8px 10px;border-radius:12px;backdrop-filter: blur(8px)}
    .search input{width:320px;max-width:58vw;border:none;outline:none;background:transparent;color:var(--text);font-size:14px}
    .btn{border:none;border-radius:10px;padding:8px 10px;font-weight:700;cursor:pointer;background:linear-gradient(90deg,var(--neon),var(--neon2));color:#04141e}
    .btn.ghost{background:transparent;border:1px solid #27417c;color:var(--text)}
    .legend{position:absolute;right:16px;bottom:16px;z-index:5;display:flex;gap:8px}
    .pill{padding:8px 12px;border-radius:999px;background:rgba(6,12,26,.6);border:1px solid #213463}
    .credit{position:absolute;left:16px;bottom:16px;z-index:5;color:var(--muted);font-size:12px;background:rgba(6,12,26,.5);border:1px solid #1c2f62;padding:6px 10px;border-radius:10px}
    .popup{font-size:13px;color:#0f1420}
  </style>
</head>
<body>
<div id="app">
  <div id="map"></div>

  <div class="topbar">
    <div class="search">
      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 21l-4.35-4.35" stroke="#9db2e8" stroke-width="2" stroke-linecap="round"/><circle cx="11" cy="11" r="7" stroke="#9db2e8" stroke-width="2"/></svg>
      <input id="q" placeholder="Pesquisar endereço, cidade, ponto de interesse" />
      <button id="btnSearch" class="btn">Buscar</button>
      <button id="btnClear" class="btn ghost">Limpar</button>
    </div>
    <button id="btnMode" class="btn ghost">Modo: Futurista 3D</button>
  </div>

  <div class="legend">
    <div class="pill">Ruas <span style="display:inline-block;width:10px;height:10px;background:var(--neon);box-shadow:0 0 12px var(--neon);border-radius:50%;margin-left:8px"></span></div>
    <div class="pill">Prédios 3D</div>
  </div>

  <div class="credit">MapLibre GL JS + OpenStreetMap • Busca por Nominatim (uso público – sujeito a limites)</div>
</div>

<script>
  // ==========================
  // CONFIGURAÇÃO DE FONTES/TILES
  // ==========================
  // Para a melhor experiência, use um key gratuito do MapTiler (plano free) e substitua MAPTILER_KEY.
  // Cadastre-se em: https://www.maptiler.com/ (gratuito) — ou troque por seu servidor OpenMapTiles.
  const MAPTILER_KEY = 'MCCHRjp9pSzpII2Ls7TZ';

  // Se preferir usar sem key, você pode apontar para um servidor de tiles vetoriais próprio.
  // O estilo abaixo usa o schema OpenMapTiles (camadas: water, landuse, building, transportation, place, etc.).

  // ==========================
  // ESTILO FUTURISTA (base escura + ruas neon + prédios extrudados)
  // ==========================
  const futuristicStyle = {
    version: 8,
    glyphs: `https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?key=${MAPTILER_KEY}`,
    sprite: `https://api.maptiler.com/maps/streets/sprite` + (MAPTILER_KEY ? `?key=${MAPTILER_KEY}` : ''),
    sources: {
      openmaptiles: {
        type: 'vector',
        url: `https://api.maptiler.com/tiles/v3/tiles.json?key=${MAPTILER_KEY}`
      },
      terrain: {
        type: 'raster-dem',
        url: `https://api.maptiler.com/tiles/terrain-rgb/tiles.json?key=${MAPTILER_KEY}`,
        tileSize: 256
      }
    },
    terrain: { source: 'terrain', exaggeration: 1.0 },
    light: { anchor: 'viewport', color: '#9fdcff', intensity: 0.4 },
    layers: [
      // Fundo
      { id:'background', type:'background', paint:{ 'background-color':'#070d1c' } },

      // Água
      { id:'water', type:'fill', source:'openmaptiles', 'source-layer':'water',
        paint:{ 'fill-color':'#091a33' } },

      // Parques/áreas verdes (escuros)
      { id:'landuse', type:'fill', source:'openmaptiles', 'source-layer':'landuse',
        paint:{ 'fill-color':'#0a1429' } },

      // Ruas - Todas as categorias visíveis
      { id:'roads-all', type:'line', source:'openmaptiles', 'source-layer':'transportation',
        filter:['in',['get','class'],['literal',['motorway','trunk','primary','secondary','tertiary','residential','service','path','track','footway']]],
        paint:{
          'line-color':[
            'match',
            ['get','class'],
            'motorway','#00ffc6',
            'trunk','#00ffc6',
            'primary','#63c6ff',
            'secondary','#63c6ff',
            'tertiary','#9af9ff',
            'residential','#ffffff',
            'service','#8aa0c8',
            'path','#8aa0c8',
            'track','#8aa0c8',
            'footway','#8aa0c8',
            '#ffffff'
          ],
          'line-width':[
            'interpolate',['linear'],['zoom'],
            6,['match',['get','class'],'motorway',2,'trunk',1.5,'primary',1.2,'secondary',1,'tertiary',0.8,'residential',0.6,0.4],
            12,['match',['get','class'],'motorway',6,'trunk',5,'primary',4,'secondary',3,'tertiary',2.5,'residential',2,1.5],
            16,['match',['get','class'],'motorway',10,'trunk',8,'primary',6,'secondary',5,'tertiary',4,'residential',3.5,3]
          ],
          'line-opacity':0.95
        }
      },
      // Glow effect for all roads
      { id:'roads-glow', type:'line', source:'openmaptiles', 'source-layer':'transportation',
        filter:['in',['get','class'],['literal',['motorway','trunk','primary','secondary','tertiary','residential','service','path','track','footway']]],
        paint:{
          'line-color':[
            'match',
            ['get','class'],
            'motorway','#00ffc6',
            'trunk','#00ffc6',
            'primary','#63c6ff',
            'secondary','#63c6ff',
            'tertiary','#9af9ff',
            'residential','#ffffff',
            'service','#8aa0c8',
            'path','#8aa0c8',
            'track','#8aa0c8',
            'footway','#8aa0c8',
            '#ffffff'
          ],
          'line-width':[
            'interpolate',['linear'],['zoom'],
            6,['match',['get','class'],'motorway',4,'trunk',3,'primary',2.5,'secondary',2,'tertiary',1.8,'residential',1.5,1],
            12,['match',['get','class'],'motorway',8,'trunk',7,'primary',6,'secondary',5,'tertiary',4.5,'residential',4,3],
            16,['match',['get','class'],'motorway',12,'trunk',10,'primary',8,'secondary',7,'tertiary',6,'residential',5.5,5]
          ],
          'line-blur': 4,
          'line-opacity':0.6
        }
      },

      // Edificações extrudadas (3D)
      { id:'3d-buildings', type:'fill-extrusion', source:'openmaptiles', 'source-layer':'building',
        minzoom: 14,
        paint:{
          'fill-extrusion-color': [
            'interpolate',['linear'],['get','height'],
            0,'#0b1e40', 30,'#1a5b8a', 60,'#1f8db5', 120,'#00e1ff'
          ],
          'fill-extrusion-height': ['case',['has','render_height'],['to-number',['get','render_height']],
                                        ['coalesce',['to-number',['get','height']],
                                                    ['*',['to-number',['get','levels']],3.2], 12]],
          'fill-extrusion-opacity': 0.92,
          'fill-extrusion-base': 0
        }
      },

      // Contorno neon dos prédios (mais destacado)
      { id:'3d-buildings-edges', type:'line', source:'openmaptiles', 'source-layer':'building', minzoom:15,
        paint:{ 
          'line-color':'#00ffc6', 
          'line-width': ['interpolate',['linear'],['zoom'],15,0.3,18,1.0], 
          'line-opacity':0.5,
          'line-blur': 1
        }
      },

      // Nomes de lugares (mais destacados)
      { id:'place-labels', type:'symbol', source:'openmaptiles', 'source-layer':'place',
        layout:{ 
          'text-field':['get','name:pt'], 
          'text-size':['interpolate',['linear'],['zoom'],4,12,14,20], 
          'text-font':['Noto Sans Bold'],
          'text-transform':'uppercase',
          'text-letter-spacing':0.1
        },
        paint:{ 
          'text-color':'#ffffff',
          'text-halo-color':'#071226', 
          'text-halo-width':2,
          'text-opacity':0.95
        }
      },

      // Nomes de ruas (mais destacados e visíveis)
      { id:'road-labels', type:'symbol', source:'openmaptiles', 'source-layer':'transportation_name',
        filter:['in',['get','class'],['literal',['motorway','trunk','primary','secondary','tertiary','residential','service']]],
        layout:{
          'text-field':['coalesce',['get','name:pt'],['get','name']],
          'text-size':['interpolate',['linear'],['zoom'],
            12,['match',['get','class'],'motorway',12,'trunk',11,'primary',10,'secondary',9,'tertiary',8,'residential',7,6],
            16,['match',['get','class'],'motorway',16,'trunk',14,'primary',13,'secondary',12,'tertiary',11,'residential',10,9]
          ],
          'text-font':['Noto Sans Bold'],
          'symbol-placement':'line',
          'text-pitch-alignment':'viewport',
          'text-rotation-alignment':'map',
          'text-letter-spacing':0.05
        },
        paint:{
          'text-color':'#ffffff',
          'text-halo-color':'#041225',
          'text-halo-width':2,
          'text-halo-blur':1,
          'text-opacity':0.95
        }
      },

      // Números de propriedades (mais visíveis)
      { id:'address-labels', type:'symbol', source:'openmaptiles', 'source-layer':'housenumber',
        minzoom: 15,
        layout:{
          'text-field':['get','housenumber'],
          'text-size':['interpolate',['linear'],['zoom'],15,10,18,14],
          'text-font':['Noto Sans Bold'],
          'text-offset':[0,0.5]
        },
        paint:{
          'text-color':'#00ffc6',
          'text-halo-color':'#041225',
          'text-halo-width':1.5,
          'text-halo-blur':0.5,
          'text-opacity':0.98
        }
      },

      // Nomes de propriedades (adicionado)
      { id:'property-labels', type:'symbol', source:'openmaptiles', 'source-layer':'poi',
        minzoom: 16,
        filter:['has','name'],
        layout:{
          'text-field':['get','name'],
          'text-size':['interpolate',['linear'],['zoom'],16,10,18,12],
          'text-font':['Noto Sans Medium'],
          'text-offset':[0,0.8]
        },
        paint:{
          'text-color':'#ffffff',
          'text-halo-color':'#041225',
          'text-halo-width':1.2,
          'text-opacity':0.9
        }
      }
    ]
  };

  // ==========================
  // INICIALIZAÇÃO DO MAPA
  // ==========================
  const map = new maplibregl.Map({
    container: 'map',
    style: futuristicStyle,
    center: [-46.6623, -23.5576], // SP como exemplo
    zoom: 16,
    pitch: 60,
    bearing: 28,
    antialias: true,
    maxZoom: 20,
    minZoom: 2
  });

  // Controles estilo Google Maps
  map.addControl(new maplibregl.NavigationControl({
    visualizePitch: true,
    showCompass: true,
    showZoom: true
  }), 'top-right');
  map.addControl(new maplibregl.GeolocateControl({
    positionOptions: { enableHighAccuracy: true },
    trackUserLocation: true,
    showUserLocation: true,
    fitBoundsOptions: { maxZoom: 18 }
  }), 'top-right');
  map.addControl(new maplibregl.FullscreenControl(), 'top-right');
  map.addControl(new maplibregl.ScaleControl({ unit: 'metric' }), 'bottom-left');

  // Céu atmosférico para profundidade
  map.on('style.load', () => {
    map.setFog({ color: '#071226', 'horizon-blend': 0.2, 'high-color': '#0a1b3d', 'space-color': '#00010a', 'star-intensity': 0.0 });
    map.setLight({ color:'#cfe9ff', intensity:0.3 });
  });

  // ==========================
  // BUSCA (Nominatim – sem chave)
  // ==========================
  const q = document.getElementById('q');
  const btnSearch = document.getElementById('btnSearch');
  const btnClear = document.getElementById('btnClear');
  btnSearch.addEventListener('click', doSearch);
  q.addEventListener('keydown', e=>{ if(e.key==='Enter') doSearch(); });
  btnClear.addEventListener('click', ()=>{ q.value=''; markers.forEach(m=>m.remove()); markers=[]; });

  let markers = [];
  async function doSearch(){
    const term = q.value.trim();
    if(!term) return;
    const url = `https://nominatim.openstreetmap.org/search?format=json&limit=5&accept-language=pt-BR&q=${encodeURIComponent(term)}`;
    try{
      const res = await fetch(url, { headers:{ 'Accept':'application/json' } });
      const data = await res.json();
      if(!data.length){ alert('Nada encontrado.'); return; }
      // centra no primeiro resultado e marca todos
      const first = data[0];
      map.flyTo({ center:[Number(first.lon), Number(first.lat)], zoom: 16.5, pitch: 60, bearing: 28 });
      markers.forEach(m=>m.remove()); markers=[];
      data.forEach(item=>{
        const mk = new maplibregl.Marker({ color:'#00ffc6' })
          .setLngLat([Number(item.lon), Number(item.lat)])
          .setPopup(new maplibregl.Popup({ offset:12 }).setHTML(`<div class='popup'><strong>${item.display_name.split(',')[0]}</strong><br/><small>${item.type}</small></div>`))
          .addTo(map);
        markers.push(mk);
      });
    }catch(err){ console.error(err); alert('Falha na busca (limite/erro Nominatim).'); }
  }

  // ==========================
  // SELETOR DE MODO (Futurista 3D vs. 2D Escuro)
  // ==========================
  const btnMode = document.getElementById('btnMode');
  let mode = 'futurist';
  btnMode.addEventListener('click', ()=>{
    if(mode==='futurist'){
      map.easeTo({ pitch:0, bearing:0, duration:800 });
      btnMode.textContent = 'Modo: 2D Minimalista';
      mode='flat';
    } else {
      map.easeTo({ pitch:60, bearing:28, duration:800 });
      btnMode.textContent = 'Modo: Futurista 3D';
      mode='futurist';
    }
  });

  // ==========================
  // INTERAÇÃO: clique mostra info do local (reverse geocode simples)
  // ==========================
  map.on('click', async (e)=>{
    const {lng, lat} = e.lngLat;
    const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=18&addressdetails=1&accept-language=pt-BR`;
    let text = `Coordenadas:\n${lat.toFixed(6)}, ${lng.toFixed(6)}`;
    try{
      const r = await fetch(url);
      const j = await r.json();
      if(j && j.display_name) text = `<strong>${j.display_name}</strong><br/><small>${lat.toFixed(5)}, ${lng.toFixed(5)}</small>`;
    }catch{ /* silencioso */ }
    new maplibregl.Popup({ offset:12 }).setLngLat([lng,lat]).setHTML(`<div class='popup'>${text}</div>`).addTo(map);
  });

  // ==========================
  // DEMO DE "LOTE" NEON (conceito propriedade virtual)
  // ==========================
  const lotCoords = [
    [-46.66223,-23.55758],[-46.66203,-23.55757],[-46.66202,-23.55775],[-46.66222,-23.55776],[-46.66223,-23.55758]
  ];
  map.on('load', ()=>{
    map.addSource('lot-demo', { type:'geojson', data:{ type:'Feature', geometry:{ type:'Polygon', coordinates:[lotCoords] } } });
    map.addLayer({ id:'lot-glow', type:'line', source:'lot-demo', paint:{ 'line-color':'#00ff6a', 'line-width':6, 'line-blur':6, 'line-opacity':0.8 } });
    map.addLayer({ id:'lot-fill', type:'fill', source:'lot-demo', paint:{ 'fill-color':'#00ffc6', 'fill-opacity':0.18 } });
    map.addLayer({ id:'lot-core', type:'line', source:'lot-demo', paint:{ 'line-color':'#a6ffe7', 'line-width':2 } });
  });
</script>
</body>
</html>
